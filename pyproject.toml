[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "drug_reference_cli"
authors = [{ name = "ouss", email = "ouss@gmail.com" }]
description = "cli used to find medical drug refernces in pubmed,clinical trails and journals"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["medical", "cli"]
license = { text = "MIT" }
classifiers = ["Programming Language :: Python :: 3"]
dependencies = ["dateutils","pydantic","python-dateutil"]
dynamic = ["version"]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
release = ["build", "twine"]
static-code-qa = ["pre-commit"]
dev = ["drug_reference_cli[test,release,static-code-qa]"]

[tool.setuptools.packages]
find = {exclude = ["tests*","testing*"]}


# docs: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
[tool.setuptools.dynamic]
version = { file = "version.txt" }

[project.scripts]
drug-reference-cli = "app.main:cli"


[tool.pytest.ini_options]
#markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    # note the use of single quote below to denote "raw" strings in TOML
    'ignore:function ham\(\) is deprecated:DeprecationWarning',
]

[tool.black]
line-length = 119
exclude = ".venv"

[tool.flake8]
docstring-convention = "all"
ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100","D103","D104","D101","D401"]
exclude = ["venv"]
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
    "missing-module-docstring",
    "C0115",  # Missing class docstring
    "W0108",  # Unnecessary lambda
    "R1708",  # StopIteration in generator
]

[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
lint.select = ["E", "F", "B", "ERA"]

# Never enforce `E501` (line length violations).
lint.ignore = ["E501", "F401","B008","ERA001"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
lint.unfixable = ["B"]
line-length = 119

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]

[tool.mypy]
ignore_missing_imports = true
disable_error_code = ["import-untyped"]
